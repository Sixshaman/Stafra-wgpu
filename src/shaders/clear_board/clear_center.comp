#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimage2D outInitialBoard;

void main()
{
    ivec2 boardSize = imageSize(outInitialBoard);

    uvec2 center       = uvec2((boardSize.x - 1) / 2, (boardSize.y - 1) / 2);
    uint  insideCenter = uint(gl_GlobalInvocationID.xy == center);

    //Each thread processes a single 2x2 quad. The quad is packed into uint32:
    // (Bits 0-7)   (Bits 8-15)
    // (Bits 16-23) (Bits 24-31)
    //For >1x1 boards the center corresponds to the bottom-right flag of the corresponding center quad
    //For 1x1 boards the center corresponds to the top-left flag of the corresponding center quad
    uint is1x1    = uint(boardSize == uvec2(1, 1));
    uint isNot1x1 = uint(!bool(is1x1));
    uint inCenter = (is1x1 << 0u) | (0u << 8u)
                  | (0u << 16u)   | (isNot1x1 * insideCenter << 24u);

    imageStore(outInitialBoard, ivec2(gl_GlobalInvocationID.xy), uvec4(inCenter));
}