#version 450

#extension GL_EXT_samplerless_texture_functions: require

#define CLICK_RULE_WIDTH  32
#define CLICK_RULE_HEIGHT 32

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 0, binding = 0) uniform utexture2D clickRuleTex;
layout(std430, set = 0, binding = 1) buffer ClickRuleData
{
    uint  ElementCount;
    uint  Radius;
    uint  Padding1;
    uint  Padding2;
    ivec2 EnabledPositions[CLICK_RULE_WIDTH * CLICK_RULE_HEIGHT];
} clickRuleData;

void main()
{
    uint clickRuleValue = texelFetch(clickRuleTex, ivec2(gl_GlobalInvocationID.xy), 0).x;
    if(clickRuleValue != 0)
    {
        int clickRuleMaxRadiusX = (CLICK_RULE_WIDTH  - 1) / 2;
        int clickRuleMaxRadiusY = (CLICK_RULE_HEIGHT - 1) / 2;

        ivec2 clickRuleOffset = ivec2(gl_GlobalInvocationID.xy) - ivec2(clickRuleMaxRadiusX, clickRuleMaxRadiusY);

        uint nextIndex = atomicAdd(clickRuleData.ElementCount, 1);
        clickRuleData.EnabledPositions[nextIndex] = clickRuleOffset;

        uint radius = max(abs(clickRuleOffset.x), abs(clickRuleOffset.y)) + 1;
        atomicMax(clickRuleData.Radius, radius);
    }
}
