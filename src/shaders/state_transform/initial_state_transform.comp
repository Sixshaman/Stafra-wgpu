#version 450

#extension GL_EXT_samplerless_texture_functions: require

//Transfroms the initial state texture into the stability buffer data

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0) uniform texture2D initialStateTex;

layout(set = 0, binding = 1, r32ui) uniform writeonly uimage2D outInitialBoard;

void main()
{
	vec4 lumCoeff = vec4(0.2126f, 0.7152f, 0.0722f, 0.0f);

	//Packed 4 values
	vec4 topLeftQuad     = texelFetch(initialStateTex, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(0, 0), 0);
	vec4 topRightQuad    = texelFetch(initialStateTex, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(1, 0), 0);
	vec4 bottomLeftQuad  = texelFetch(initialStateTex, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(0, 1), 0);
	vec4 bottomRightQuad = texelFetch(initialStateTex, ivec2(gl_GlobalInvocationID.xy) * 2 + ivec2(1, 1), 0);

	mat4x4 stateColorMat    = mat4x4(topLeftQuad, topRightQuad, bottomLeftQuad, bottomRightQuad);
	uvec4 stateColorResults = uvec4(greaterThan(lumCoeff * stateColorMat, vec4(0.15f)));

	//Pack a uint32-encoded quad      from a bvec4-encoded quad:
	// (Bits 0-7)   (Bits 8-15)       (values.x) (values.y)
	// (Bits 16-23) (Bits 24-31)      (values.z) (values.w)
	uint packedQuad = ((stateColorResults.x & 0xffu) <<  0) | ((stateColorResults.y & 0xffu) <<  8)
	                | ((stateColorResults.z & 0xffu) << 16) | ((stateColorResults.w & 0xffu) << 24);

	//Masks for halves of 2x2 quad, encoded as
	// (Bits 0-7)   (Bits 8-15)
	// (Bits 16-23) (Bits 24-31)
	const uint rightQuadMask  = 0xff00ff00;
	const uint bottomQuadMask = 0xffff0000;

	uvec2 rightBottomCoord = imageSize(outInitialBoard) + ivec2(-1, -1); //Board size is always 2^n - 1. Need to mask out the bottom and right edge
	bvec2 onRightBottom    = equal(gl_GlobalInvocationID.xy, rightBottomCoord);
	uvec2 rightBottomMask  = uvec2(rightQuadMask, bottomQuadMask) * uvec2(onRightBottom);

    imageStore(outInitialBoard, ivec2(gl_GlobalInvocationID.xy), uvec4(packedQuad & ~(rightBottomMask.x | rightBottomMask.y)));
}