#version 450

#extension GL_EXT_samplerless_texture_functions: require

//Transfroms the initial state texture into the stability buffer data

layout(local_size_x = 32, local_size_y = 32) in;

layout(set = 0, binding = 0) uniform texture2D initialStateTex;

layout(set = 0, binding = 1) uniform sampler initialStateSampler; //Does nothing, only needed for textureGather

layout(set = 0, binding = 2, r32ui) uniform writeonly uimage2D outInitialBoard;

uint buildPackedQuadValue(uvec4 values)
{
	//Packs a quad encoded as (values.x values.y
	//                         values.z values.w)
	//to a single uint32
	return ((values.x & 0xffu) <<  0) | ((values.y & 0xffu) <<  8)
	     | ((values.z & 0xffu) << 16) | ((values.w & 0xffu) << 24);
}

void main()
{
	vec3 lumCoeff = vec3(0.2126f, 0.7152f, 0.0722f);

	//Packed 4 values
	vec4 stateX = textureGather(sampler2D(initialStateTex, initialStateSampler), ivec2(gl_GlobalInvocationID.xy) * 2, 0);
	vec4 stateY = textureGather(sampler2D(initialStateTex, initialStateSampler), ivec2(gl_GlobalInvocationID.xy) * 2, 0);
	vec4 stateZ = textureGather(sampler2D(initialStateTex, initialStateSampler), ivec2(gl_GlobalInvocationID.xy) * 2, 0);
	mat3x4 stateColorMat = mat3x4(stateX, stateY, stateZ);

	uvec4 stateColorResults = uvec4(greaterThan(stateColorMat * lumCoeff, vec4(0.15f)));
    imageStore(outInitialBoard, ivec2(gl_GlobalInvocationID.xy), uvec4(buildPackedQuadValue(stateColorResults)));
}