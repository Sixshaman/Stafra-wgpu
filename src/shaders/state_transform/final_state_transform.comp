#version 450

#extension GL_EXT_samplerless_texture_functions: require

//Transfroms the stability buffer data into a colored image
layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0) uniform utexture2D finalBoard;

//Mip generation is handled by another shader (unfortunately by the time of writing this code you can't bind >4 stotage textures)
//The reason for this is that web-sys, which wgpu-rs is based on, doesn't support nonGuaranteedLimits property of GPUDeviceDescriptor
layout(set = 0, binding = 1, rgba8) uniform writeonly image2D outTexMip0;

uvec4 unpackQuadValue(uint packedQuad)
{
	//Unpacks a quad
	return uvec4((packedQuad >>  0) & 0xffu, (packedQuad >>  8) & 0xffu,
	             (packedQuad >> 16) & 0xffu, (packedQuad >> 24) & 0xffu);
}

void main()
{
	uint  finalStability     = texelFetch(finalBoard, ivec2(gl_GlobalInvocationID.xy), 0).x;
	uvec4 finalStabilityQuad = unpackQuadValue(finalStability);

	finalStabilityQuad = finalStabilityQuad * uvec4(lessThan(finalStabilityQuad, uvec4(2))); //Zero out all values that have final stability >= 2

	vec4 texValue = vec4(finalStabilityQuad);
	imageStore(outTexMip0, ivec2(gl_GlobalInvocationID.xy), texValue);
}